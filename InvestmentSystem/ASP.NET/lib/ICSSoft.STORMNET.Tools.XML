<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ICSSoft.STORMNET.Tools</name>
    </assembly>
    <members>
        <member name="T:ICSSoft.STORMNET.Tools.CaptionTool">
            <summary>
            Вспомогательный класс для обработки и получения Caption'ов и других имён
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.CaptionTool.TransformTitle(System.String,System.Boolean,System.Boolean)">
            <summary>
            Формирование из текста читаемого заголовка(caption)
            (ранее данный метод находится в STORM.NET Case Tool plugin)
            </summary>
            <param name="propertyName">Исходный текст</param>
            <param name="splitWords">Разделять ли слова</param>
            <param name="hideMasters">Скрывать ли имена мастеров</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.CaptionTool.GetAttrCaptionByView(ICSSoft.STORMNET.View,System.String)">
            <summary>
            Класс для получения Caption'a поля по его имени
            (если представление null или поле с таким именем не найдено, то отобразится просто 
            имя поля, разделённое из camel-нотации)
            </summary>
            <param name="currentView">
            Представление, по которому будет получаться Caption
            </param>
            <param name="fieldName">
            Имя поля
            </param>
            <returns>
            Результат
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.CaptionTool.GetValidName(System.String)">
            <summary>
            Получение корректного имени из набора символов (лишние символы просто отбрасываются).
            Корректными считаются буквы, цифры (не в первой позиции) и нижнее подчёркивание.
            </summary>
            <param name="objectName"> Исходный набор символов, которые необходимо преобразовать. </param>
            <returns> Строка с исключёнными недопустимыми символами. </returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.DirectoryServicesTools">
            <summary>
            Класс предназначен для работы с System.DirectoryServices.
            К нему относится все, что касается системных групп, пользователей и доменов.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.DirectoryServicesTools.GetUserFullNameFromLocalMachine(System.String)">
            <summary>
            Получить имя пользователя по логину на локальном комьютере.
            </summary>
            <param name="userLogin">Логин для поиска пользователя.</param>
            <returns>Имя найденного пользователя. Будет пустым, если не найдется.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.DirectoryServicesTools.GetUserFullNameFromActiveDirectory(System.String,System.String)">
            <summary>
            Получить имя пользователя по логину в указанной Active Directory.
            </summary>
            <param name="activeDirectoryName">Active Directory в которой будем искать.</param>
            <param name="userLogin">Логин для поиска пользователя.</param>
            <returns>Имя найденного пользователя. Будет пустым, если не найдется.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.MAPIWrapper">
            <summary>
            Класс для отправки писем с вложением. Поддерживается функция открытия почтового клиента.
            Основано на http://www.codeproject.com/KB/IP/SendFileToNET.aspx 
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.ToolXML">
            <summary>
            Инструмент для сериализации-десериализации в XML
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.XMLDocument2DataObject(ICSSoft.STORMNET.DataObject@,System.Xml.XmlDocument)">
            <summary>
            Получение объекта данных из ранее полученного XML документа
            </summary>
            <param name="dataObject"> Объект данных, в который будем десериализовывать </param>
            <param name="xmlDoc"> Сериализованный объект данных </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.DataObject2XMLDocument(ICSSoft.STORMNET.DataObject@)">
            <summary>
            Получение XML документа из объекта данных
            </summary>
            <param name="dataObject"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.DataObject2XMLDocument(ICSSoft.STORMNET.DataObject@,System.Boolean)">
            <summary>
            Получение XML документа из объекта данных
            </summary>
            <param name="dataObject"></param>
            <param name="serializeAggregators"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.DataObject2XMLDocument(ICSSoft.STORMNET.DataObject@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Получение XML документа из объекта данных
            </summary>
            <param name="dataObject"></param>
            <param name="serializeAggregators"></param>
            <param name="setObjectLoadingStateLoaded"></param>
            <param name="setObjectStatusCreated"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.DataObject2XMLDocument(ICSSoft.STORMNET.DataObject@,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Получение XML документа из объекта данных
            </summary>
            <param name="dataObject"> Сам объект данных </param>
            <param name="serializeAggregators"> Следует ли сериализовать детейлы </param>
            <param name="setObjectLoadingStateLoaded"> Установить LoadingState объекта в Loaded </param>
            <param name="setObjectStatusCreated"> Установить ObjectStatus объекта в Created </param>
            <param name="serializeMasters"> Проводить полную сериализацию мастеров объектов </param>
            <returns> Сериализованное представление объекта </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.prv_DataObject2XmlElement(System.Xml.XmlElement,ICSSoft.STORMNET.DataObject,System.Collections.SortedList,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Получение XML документа из объекта данных
            </summary>
            <param name="xmlEl"> Текущий XmlElement, куда записываются данные и от которого создаются потомки </param>
            <param name="dataObject"> Сериализуемый объект данных </param>
            <param name="assemblies"> Имена сборок (будут записаны в xml) </param>
            <param name="serializeAggregators"> Следует ли сериализовать детейлы </param>
            <param name="setObjectLoadingStateLoaded"> Установить LoadingState объекта в Loaded </param>
            <param name="setObjectStatusCreated"> Установить ObjectStatus объекта в Created </param>
            <param name="serializeMasters"> Сериализовать мастеров объектов </param>
            <param name="usedPrimaryKeyList"> Вспомогательный список первичных ключей объектов, которые уже были сериализованы </param>
            <returns> Сериализованное представление объекта </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.ObjectToString(System.Object)">
            <summary>
             Сериализация объекта при помощи SoapFormatter
            </summary>
            <param name="o">Объект для сериализации</param>
            <returns>Сериализованный объект</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.ObjectFromString(System.String)">
            <summary>
            Десериализация объекта при помощи SoapFormatter
            </summary>
            <param name="s">Сериализованный объект</param>
            <returns>Востановленный объект</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.prv_XmlElement2DataObject(System.Xml.XmlElement,ICSSoft.STORMNET.DataObject,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.Dictionary{System.String,ICSSoft.STORMNET.DataObject})">
            <summary>
            Извлечение объекта данных из строки
            </summary>
            <param name="xmlEl"> Текущий элемент xml </param>
            <param name="dataObject"> Текущий объект данных </param>
            <param name="assemblies"> Необходимые сборки </param>
            <param name="DataObjectCache"> DataObjectCache </param>
            <param name="deserializedObjectsList"> Словарь десериализованных объектов с их первичными ключами </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.prv_ReadProperty(System.Xml.XmlElement,ICSSoft.STORMNET.DataObject,System.String,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.Dictionary{System.String,ICSSoft.STORMNET.DataObject})">
            <summary>
            Прочитать свойство объекта (с целью его дальнейшей десериализации)
            </summary>
            <param name="xmlEl"> Текущий элемент xml </param>
            <param name="dataObject"> Текущий объект данных </param>
            <param name="propname"> Читаемое свойство объекта </param>
            <param name="assemblies"> Необходимые сборки </param>
            <param name="DataObjectCache"> DataObjectCache </param>
            <param name="deserializedObjectsList"> Словарь десериализованных объектов с их первичными ключами </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.prv_ReadMaster(System.Xml.XmlNode,ICSSoft.STORMNET.DataObject,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.Dictionary{System.String,ICSSoft.STORMNET.DataObject})">
            <summary>
            Извлечение мастера из сериализованного представления
            </summary>
            <param name="masternode"> Текущий элемент xml </param>
            <param name="dataObject"> Текущий объект данных </param>
            <param name="assemblies"> Необходимые сборки </param>
            <param name="DataObjectCache"> DataObjectCache </param>
            <param name="deserializedObjectsList"> Словарь десериализованных объектов с их первичными ключами </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolXML.prv_ReadDetail(System.Xml.XmlNodeList,ICSSoft.STORMNET.DetailArray,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.Dictionary{System.String,ICSSoft.STORMNET.DataObject})">
            <summary>
            Извлечение детейла из сериализованного представления
            </summary>
            <param name="xmldetailobjects"> Текущий элемент xml </param>
            <param name="detail"> Текущий список детейлов </param>
            <param name="assemblies"> Необходимые сборки </param>
            <param name="DataObjectCache"> DataObjectCache </param>
            <param name="deserializedObjectsList"> Словарь десериализованных объектов с их первичными ключами </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.ToolBinarySerializer">
            <summary>
             Инструмент для бинарной сериализации-десериализации
             Используется для Function
             Сериализованные байты конвертируются в ToBase64String
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolBinarySerializer.ObjectToString(System.Object)">
            <summary>
             Сериализация объекта при помощи BinaryFormatter
            </summary>
            <param name="o">Объект</param>
            <returns>Строка</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolBinarySerializer.ObjectFromString(System.String)">
            <summary>
            Десериализация объекта при помощи BinaryFormatter
            </summary>
            <param name="s">Сериализованный объект</param>
            <returns>Востановленный объект</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolBinarySerializer.ObjectFromString(System.String,System.Runtime.Serialization.SerializationBinder)">
            <summary>
            Десериализация объекта при помощи BinaryFormatter
            </summary>
            <param name="s">Сериализованный объект</param>
            <param name="binder">
            Binder, который необходимо указать, если при десереализации
            необходимо реализовать собственную логику по поиску типов.
            </param>
            <returns>Востановленный объект</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.AssemblyLoader">
            <summary>
            Помощь при загрузке сборок, которые были подписаны
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.AssemblyLoader.LoadAssembly(System.String)">
            <summary>
            Загрузка сборки сначала по полному переданному пути, потом с обрезкой PublicKeyToken (Если не получилось, то Exception)
            </summary>
            <param name="asmName">Полное имя сборки</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.AssemblyLoader.GetTypeWithAssemblyName(System.String)">
            <summary>
            Получить тип по имени с указанием сборки (должен работать, даже если изменился PublicKeyToken)
            </summary>
            <param name="assemblyQualifiedName">Полное имя типа</param>
            <returns>Тип</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.AssemblyLoader.CurrentDomainAssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Обработчик события на неразрешённую сборку. Пробуем загружать сборки для десериализации по неполному описанию.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
            <returns>null - если не нашлось ничего</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.AssemblyLoader.CurrentDomainTypeResolve(System.Object,System.ResolveEventArgs)">
            <summary>
             Разрешить тип
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.AllowAllAssemblyVersionsDeserializationBinder">
            <summary>
             
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolZIP.Compress(System.IO.MemoryStream)">
            <summary>
            Сжатие
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolZIP.Decompress(System.IO.MemoryStream)">
            <summary>
            Разжатие
            </summary>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolZIP.Compress(System.String)">
            <summary>
            Сжатие и кодирование в base64
            </summary>
            <param name="несжатаяСтрока">входная строчка</param>
            <returns>сжатая строчка</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.ToolZIP.Decompress(System.String)">
            <summary>
            Разжатие
            </summary>
            <param name="сжатаяСтрока">сжатая строчка</param>
            <returns>исходная строка</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Tools.XmlTools">
            <summary>
             Инструменты для работы с Xml
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Tools.XmlTools.GetXDocumentByXElement(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Конвертация <see cref="T:System.Xml.Linq.XElement"/> в <see cref="T:System.Xml.XmlDocument"/>
            </summary>
            <param name="xElement">XDocument для конвертации</param>
            <param name="versionXmlDoc">Версия создаваемого xml документа</param>
            <param name="encodingXmlDoc">Кодировка для создаваемого xml документа</param>
            <returns>Результат конвертации XmlDocument</returns>
        </member>
    </members>
</doc>
