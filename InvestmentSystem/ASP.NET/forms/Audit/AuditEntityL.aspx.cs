/*flexberryautogenerated="true"*/
namespace ICSSoft.STORMNET.Business.Audit.Objects
{
    using System;

    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;
    using ICSSoft.STORMNET.Web.Controls;

    using Resources;

    /// <summary>
    /// Списковая форма отображения данных аудита
    /// </summary>
    public partial class AuditEntityL : BaseListForm<AuditEntity>
    {
        /// <summary>
        /// Элемент, куда будет вычитываться первичный ключ объекта, данные по аудиту которого необходимо показать.
        /// Запрос с включённой фильтрацией: localhost:6500/forms/AuditEntity/AuditEntityL.aspx?AuPK={20bddcd0-cc61-4bfb-90d2-91568a04ab22}
        /// </summary>
        private string objectPrimaryKeyForFilter = string.Empty;

        /// <summary>
        /// Конструктор без параметров,
        /// инициализирует свойства, соответствующие конкретной форме.
        /// </summary>
        public AuditEntityL() : base(AuditEntity.Views.AuditEntityL)
        {
            EditPage = AuditEntityE.FormPath;
        }
                
        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Audit/AuditEntityL.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
            WebObjectListView1.Operations.New = false;
            WebObjectListView1.Operations.Delete = false;
            WebObjectListView1.Operations.DeleteInRow = false;
            WebObjectListView1.Operations.AllowColumnResizing = true;

            // Определение источника данных
            WebObjectListView1.ConnStrinName = AuditService.Current.AuditConnectionStringName;

            objectPrimaryKeyForFilter = Request["AuPK"];

            if (!string.IsNullOrEmpty(objectPrimaryKeyForFilter))
            { // Фильтрация данных аудита
                SQLWhereLanguageDef langDef = LangDef;
                Function lf = langDef.GetFunction(
                    langDef.funcEQ, new VariableDef(langDef.StringType, "ObjectPrimaryKey"), objectPrimaryKeyForFilter);
                WebObjectListView1.LimitFunction = lf;
            }
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }
    }
}
